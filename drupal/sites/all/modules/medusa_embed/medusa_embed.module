<?php

/**
 * @file
 *
 */

/* ***************************************** */
/* Hook Implementations                      */
/* ***************************************** */

/**
 * Implements hook_help().
 */
function medusa_embed_help($path, $arg) {
}

/**
 * Implements hook_filter_info().
 *
 * For performance, the uos_programme filter is allowed to be cached by default. See
 * uos_programme_filter_invalidate_caches() for details. Some sites may use advanced
 * uos_programme styles with rendering implentations that differs per theme or based on
 * other runtime information. For these sites, it may be necessary to implement
 * a module with a hook_filter_info_alter() implementation that sets
 * $info['uos_programme_filter']['cache'] to FALSE.
 *
 * @see uos_programme_filter_invalidate_caches()
 */
function medusa_embed_filter_info() {
  $filters['medusa_embed_filter'] = array(
    'title' => t('Converts [embed:] tags'),
    'description' => t('Converts [embed:filename.ext] tags to flash objects'),
    'process callback' => 'medusa_embed_filter',
    'cache' => false,
    'weight' => 2,
  );

  return $filters;
}


/**
 * Filter callback for uos_programme markup filter.
 *
 * @TODO check for security probably pass text through filter_xss
 * @return unknown_type
 */
function medusa_embed_filter($text) {
  $text = ' ' . $text . ' ';
  //embed tag must look like [embed:filname.ext moduleID=1 activityID=2 width=100 height=100] 
  //width and height are mandatory and their order is defined
  $text = preg_replace_callback("/\[embed:([^\]\s]+)\s*(activityID=(\d+))?\s*(width=(\d+))?\s*(height=(\d+))?]/", 'medusa_embed_build_embed', $text);
  return $text;
}

function medusa_embed_build_embed( $matches )
{
	global $base_url;

	$filename = $matches[1];
	$activity_id = @$matches[3];
	$width = @$matches[5] ?: 400; #?: will make this default to 400 if no value is supplied
	$height = @$matches[7] ?: 300;

	$module_name = '0:ERROR';
	$module_title = "MODULE TITLE NOT FOUND";
	if ($node = menu_get_object()) {
		// Get the nid
		$node_id = $node->nid;

		$book_id = $node->book['bid'];
	
		$parent_book = node_load($book_id);

		$module_name = $book_id; //. ':' . $parent_book->title;
		$module_title = $parent_book->title;
	}
	
	if(preg_match("/^modulesurvey/", $filename))
	{
		global $user;
		return "<p class='module-survey'><a href='https://www.isurvey.soton.ac.uk/start.php?id=12966&qid655171=".urlencode($user->name)."&qid655172=".urlencode($module_title)."'>$module_title Module Evaluation Survey</a></p>";
	}

	if(preg_match("/^completioncheck/", $filename))
	{
		return "<p class='module-completion'>We are required to inform the GMC of staff development activity in our annual return. Please tick the box to confirm that you have completed this online module. This will also enable you to print out a certificate of completion. <input type='checkbox' data-module='$module_name'></p>";
	}

	$api_url = "$base_url/soton/api";

	$common_flash_vars = array(
		'moduleID' => $module_name,
		'getAnswerURL' => "$api_url/getAnswer",
		'saveURL' => "$api_url/save",
		'sessionExistsUrl' => "$api_url/sessionExists",
		'clearURL' => "$api_url/clear",
		'getAllUserAnswer' => "$api_url/getAllUserAnswer"
	);
	$embed_tags = array(
		'align' => 'middle',
		'allowFullScreen' => 'false',
		'allowScriptAccess' => 'sameDomain',
		'bgcolor' => '#ffffff',
		'name' => 'myFlashMovie',
		'pluginspage' => 'http://www.adobe.com/go/getflash',
		'quality' => 'high',
		'type' => 'application/x-shockwave-flash',
		'height' => $height,
		'width' => $width
	);

	$common_flash_args_string = '';
	foreach ($common_flash_vars as $k => $v)
	{
		$common_flash_args_string .= '&';
		$common_flash_args_string .= urlencode($k);
		$common_flash_args_string .= '=';
		$common_flash_args_string .= urlencode($v);
	}

	if(preg_match("/.swf$/", $filename))
	{
		$embed_tags['src'] = $base_url . '/sites/default/files/' . $filename;
		$embed_tags['FlashVars'] = 'activityID=' . $activity_id . $common_flash_args_string;
	}else{
		$embed_tags['src'] = $base_url . '/soton/swfs/introVideo.swf';
		$embed_tags['FlashVars'] = 'activityID=' . $activity_id . '&videoURL=Act2_1.flv' . $common_flash_args_string;
		$embed_tags['style'] = 'float:right;padding-left:5px;';
	}

	$embedded_text = '<embed ';
	foreach ($embed_tags as $k => $v)
	{
		$v = htmlspecialchars($v);
		$embedded_text .= "$k=\"$v\"";
	}
	$embedded_text .= ' />';

	return $embedded_text;
}
